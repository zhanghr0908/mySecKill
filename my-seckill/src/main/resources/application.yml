spring:
  #静态资源处理
  resources:
    #启动默认静态资源处理，默认启动(状态码304)
    add-mappings: true
    cache:
      cachecontrol:
        #缓存响应时间，单位秒
        max-age: 3600
    chain:
      #资源链启动缓存，默认启动
      cache: true
      #启动资源链，默认禁用
      enabled: true
      #启用压缩资源（gzip，brotil）解析，默认禁用
      compressed: true
      #启用h5应用缓存，默认禁用
      html-application-cache: true
    #静态资源目录
    static-locations: classpath:/static/

  thymeleaf:
    cache: false
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/myseckill?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
    hikari:
      pool-name: DateHikariCP
      # 最小空闲连接数
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000(10分钟)
      idle-timeout: 1800000
      # 最大连接数，默认10
      maximum-pool-size: 10
      # 从连接池返回的连接自动提交
      auto-commit: true
      # 连接最大存活时间，0表示永久存活，默认1800000(30分钟)
      max-lifetime: 1800000
      # 连接超时时间，默认30000(30秒)
      connection-timeout: 3000
      # 测试连接是否可用的查询语句
      connection-test-query: SELECT 1

  # redis配置
  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
    timeout: 10000ms
    lettuce:
      pool:
        #最大连接数 默认8
        max-active: 8
        #最大连接阻塞时间
        max-wait: 1000ms
        #最大空闲连接，默认8
        max-idle: 200

  #RabbitMQ
  rabbitmq:
    #服务器
    host: 192.168.1.110
    #用户名
    username: root
    #密码
    password: root
    #虚拟主机
    virtual-host: /
    #端口
    port: 5672
    listener:
      simple:
        #消费者最小数量
        concurrency: 10
        #消费者最大数量
        max-concurrency: 10
        #限制消费者每次只能处理一条消息，处理完在继续下一条消息
        prefetch: 1
        #启动时默认启动容器
        auto-startup: true
        #消息被拒绝时重新进入队列
        default-requeue-rejected: true
    template:
      retry:
        #发布重试，默认false
        enabled: true
        #重试时间，默认1000ms
        initial-interval: 1000ms
        #重试最大次数，默认3次
        max-attempts: 3
        #最大重试间隔时间
        max-interval: 10000ms
        #重试的间隔乘数，比如配2.0  第一等10s 第二次等20s 第三次等40s
        multiplier: 1


#mybatis-plus
mybatis-plus:
  # 配置Mapper.xml映射文件
  mapper-locations: classpath*:/mapper/*Mapper.xml
  # 配置MyBatis数据返回类型别名(默认别名是类名)
  type-aliases-package: com.example.seckilldemo.pojo

# MyBatis SQL打印(方法接口所在的包，不是Mapper.xml所在的包)
logging:
  level:
    com.example.sekilldemo.mapper: debug